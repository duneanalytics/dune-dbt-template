name: dbt CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'models/**'
      - 'macros/**'
      - 'dbt_project.yml'
      - 'profiles.yml'
      - 'packages.yml'
      - '.github/workflows/dbt_ci.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  dbt-ci:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    env:
      DUNE_API_KEY: ${{ secrets.DUNE_API_KEY }}
      DUNE_TEAM_NAME: ${{ vars.DUNE_TEAM_NAME || 'dune' }}  # Set as GitHub Variable or defaults to 'dune'
      DEV_SCHEMA_SUFFIX: pr${{ github.event.pull_request.number }}
    
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Install dependencies
        run: uv sync --locked

      - name: Install dbt packages
        run: uv run dbt deps

      - name: Download main branch manifest
        id: download-manifest
        continue-on-error: true
        # Using dawidd6/action-download-artifact instead of actions/download-artifact
        # because the official action only downloads artifacts from the same workflow run,
        # while we need to download the manifest from a different workflow (dbt_deploy).
        uses: dawidd6/action-download-artifact@v6
        with:
          name: prod-manifest-latest
          path: ./state
          workflow: dbt_deploy.yml
          branch: main
          if_no_artifact_found: warn

      - name: Generate manifest if not found
        if: "!contains(steps.download-manifest.outcome, 'success')"
        run: |
          echo "⚠️  No manifest found - generating from main branch..."
          
          # Check out main branch to a subdirectory
          git fetch origin main
          git worktree add main-branch origin/main
          
          cd main-branch
          
          # Install packages and compile
          uv run dbt deps
          uv run dbt compile
          
          # Copy manifest to state directory
          cd ..
          mkdir -p state
          cp main-branch/target/manifest.json state/manifest.json
          
          # Clean up worktree
          git worktree remove main-branch
          
          echo "✅ Manifest generated from main branch"

      - name: Upload generated manifest as artifact
        if: "!contains(steps.download-manifest.outcome, 'success')"
        uses: actions/upload-artifact@v4
        with:
          name: prod-manifest-latest
          path: state/manifest.json
          retention-days: 90
          overwrite: true

      - name: Compile feature branch models
        run: uv run dbt compile

      - name: Run modified models (full refresh)
        run: uv run dbt run --select state:modified --state ./state --full-refresh

      - name: Test modified models (after full refresh)
        run: uv run dbt test --select state:modified --state ./state
  
      - name: Run modified incremental models (incremental run)
        run: uv run dbt run --select state:modified,config.materialized:incremental --state ./state

      - name: Test modified incremental models (after incremental run)
        run: uv run dbt test --select state:modified,config.materialized:incremental --state ./state