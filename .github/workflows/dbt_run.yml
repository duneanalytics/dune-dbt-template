name: dbt CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'models/**'
      - 'macros/**'
      - 'dbt_project.yml'
      - 'profiles.yml'
      - 'packages.yml'
      - '.github/workflows/dbt_run.yml'

jobs:
  dbt-run:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    env:
      DUNE_API_KEY: ${{ secrets.DUNE_API_KEY }}
      DUNE_TEAM_NAME: ${{ vars.DUNE_TEAM_NAME || 'dune' }}  # Set as GitHub Variable or defaults to 'dune'
      DEV_SCHEMA_SUFFIX: pr${{ github.event.pull_request.number }}
    
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for comparison

      - name: Enforce branch is up-to-date with main
        run: |
          git fetch origin main:main
          BEHIND=$(git rev-list --count HEAD..main)
          AHEAD=$(git rev-list --count main..HEAD)
          
          echo "üìä Branch Status:"
          echo "  - Commits ahead of main: $AHEAD"
          echo "  - Commits behind main: $BEHIND"
          
          if [ $BEHIND -gt 0 ]; then
            echo ""
            echo "‚ùå ERROR: This branch is $BEHIND commit(s) behind main"
            echo ""
            echo "Please update your branch with the latest changes from main:"
            echo "  git fetch origin main"
            echo "  git merge origin/main"
            echo "  # or: git rebase origin/main"
            echo ""
            echo "This ensures your changes are tested against the latest codebase."
            exit 1
          fi
          
          echo "‚úÖ Branch is up-to-date with main"

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Install dependencies
        run: uv sync --locked

      - name: Install dbt packages
        run: uv run dbt deps

      - name: Checkout main branch for state comparison
        uses: actions/checkout@v4
        with:
          ref: main
          path: main-branch

      - name: Install dbt packages for main branch
        working-directory: main-branch
        run: uv run dbt deps

      - name: Generate manifest from main branch
        working-directory: main-branch
        run: uv run dbt compile

      - name: Copy main manifest to state directory
        run: |
          mkdir -p state
          cp main-branch/target/manifest.json state/manifest.json

      - name: Upload main branch manifest as artifact
        uses: actions/upload-artifact@v4
        with:
          name: main-manifest
          path: state/manifest.json
          retention-days: 7

      - name: Compile feature branch models
        run: uv run dbt compile

      - name: Upload feature branch manifest as artifact
        uses: actions/upload-artifact@v4
        with:
          name: feature-manifest
          path: target/manifest.json
          retention-days: 7

      - name: Run modified models (full refresh)
        run: uv run dbt run --select state:modified --state ./state --full-refresh

      - name: Test modified models (after full refresh)
        run: uv run dbt test --select state:modified --state ./state
  
      - name: Run modified incremental models (incremental run)
        run: uv run dbt run --select state:modified,config.materialized:incremental --state ./state

      - name: Test modified incremental models (after incremental run)
        run: uv run dbt test --select state:modified,config.materialized:incremental --state ./state